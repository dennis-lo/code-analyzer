The development of this analyzer will be divided into the following phases (to be revised):

0. Tokenizer:
	- Read contents from input
	- Tokenize contents
	- Categorize tokens

1. Clean-up
	- Trailing whitespace
	- Style

2. Statement-level analysis
	- Dead statements
	- Simplification
	- Readibility

3. Block-level analysis
	- Repeated groups of code / patterns
	- Comparison / flow control

4. Function-level analysis
	- Reduce recursion
	- Modularity
	- Dependency between functions

5. Class-level analysis
	- Hidden fields, methods
	- Not necessarily applicable to some programming languages

6. Basic, code efficiency analysis
	- Static components, string comparison, string construction, etc.

7. Pattern-level analysis
	- Dependency between roles (objects)
	- Not necessarily applicable to some programming languages

Implementation, front-end framework, etc.
	- Prototype: Tcl/Tk

Requirements:
	- This analyzer should be able to run locally without the necessity of accessing the Internet.
	- To be defined
